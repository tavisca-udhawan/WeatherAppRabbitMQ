//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://tavisca.event.service", ConfigurationName="IEventService")]
public interface IEventService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tavisca.event.service/IEventService/Notify", ReplyAction="http://tavisca.event.service/IEventService/NotifyResponse")]
    void Notify(System.Collections.Generic.List<string> events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tavisca.event.service/IEventService/Notify", ReplyAction="http://tavisca.event.service/IEventService/NotifyResponse")]
    System.Threading.Tasks.Task NotifyAsync(System.Collections.Generic.List<string> events);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tavisca.event.service/IEventService/Publish", ReplyAction="http://tavisca.event.service/IEventService/PublishResponse")]
    void Publish(string eventData);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tavisca.event.service/IEventService/Publish", ReplyAction="http://tavisca.event.service/IEventService/PublishResponse")]
    System.Threading.Tasks.Task PublishAsync(string eventData);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IEventServiceChannel : IEventService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class EventServiceClient : System.ServiceModel.ClientBase<IEventService>, IEventService
{
    
    public EventServiceClient()
    {
    }
    
    public EventServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public EventServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public EventServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public EventServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void Notify(System.Collections.Generic.List<string> events)
    {
        base.Channel.Notify(events);
    }
    
    public System.Threading.Tasks.Task NotifyAsync(System.Collections.Generic.List<string> events)
    {
        return base.Channel.NotifyAsync(events);
    }
    
    public void Publish(string eventData)
    {
        base.Channel.Publish(eventData);
    }
    
    public System.Threading.Tasks.Task PublishAsync(string eventData)
    {
        return base.Channel.PublishAsync(eventData);
    }
}
